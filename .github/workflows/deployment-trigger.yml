name: 'PIP'
on:
  issues:
    types: [opened, reopened, edited]
env:
  TRUSTED_SENDERS: '["gronke-bot"]'
  TRUSTED_REPOS: '["gronke/py-freebsd_sysctl"]'
  TRUSTED_TEST_REPOS: '["bsdci/py-freebsd_sysctl"]'
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - name: "Check Trusted Sender"
      if: contains(fromJson(env.TRUSTED_SENDERS), github.event.sender.login) == false
      env:
        ACTION_SENDER: ${{ github.event.sender.login }}
      run: |
        echo "$ACTION_SENDER is untrusted."
        exit 1
    - name: "Read Issue Body"
      id: issue_body
      env:
        GITHUB_ISSUE_BODY: ${{ github.event.issue.comment.body }}
      run: |
        python3 <<___EOF
        import re
        import os
        body = os.environ["GITHUB_ISSUE_BODY"].replace("\r\n", "\n").replace("\r", "\n")
        body = f"\n{body}\n"
        print(body)
        REPOSITORY = re.match(r'.*\nRepository: ([A-Za-z0-9\.\-_/]+)\n.*', body, re.DOTALL)[1]
        VERSION = re.match(r'.*\nVersion: ([0-9]+\.[0-9]+\.[0-9]+)\n.*', body, re.DOTALL)[1]
        COMMIT = re.match(r'.*\nCommit: ([A-Fa-f0-9]{40})\n.*', body, re.DOTALL)[1]
        print(f"::set-output name=REPOSITORY::{REPOSITORY}")
        print(f"::set-output name=VERSION::{VERSION}")
        print(f"::set-output name=COMMIT::{COMMIT}")
        ___EOF
    - name: "Install Tools"
      run: |
        python3 -m pip install -U pip
        python3 -m pip install twine
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        repository: ${{ steps.issue_body.outputs.REPOSITORY }}
    - name: "Verify Repository"
      run: |
        CURRENT_COMMIT="$(git rev-parse --verify HEAD)"
        if [ "$CURRENT_COMMIT" != "${{ steps.issue_body.outputs.COMMIT }}" ]; then
          echo "Commit mismatch: (requested ${{ steps.issue_body.outputs.COMMIT }}, but found $CURRENT_COMMIT"
          exit 1
        fi
        if [ $(< VERSION) != "${{ steps.issue_body.outputs.REPOSITORY }}" ]; then
          echo "Version mismatch."
        fi
    - name: Bundle Package
      run: python setup.py sdist
    - name: "Deploy Package"
      if: contains(fromJson(env.TRUSTED_REPOS), steps.issue_body.outputs.REPOSITORY)
      env:
        TWINE_PASSWORD: "${{ secrets.TESTPYPI_API_TOKEN }}"
      run: |
        echo "Deploying TRUSTED repository"
        ls -al
        echo ${{ github.event.issue.comment.body }}
        echo "dist/$(python3 setup.py --name)-$(python3 setup.py --version).tar.gz"
        ls -al dist/
    - name: "Deploy Package (Testing)"
      if: contains(fromJson(env.TRUSTED_TEST_REPOS), steps.issue_body.outputs.REPOSITORY)
      env:
        TWINE_REPOSITORY_URL: "https://test.pypi.org/simple/"
        TWINE_PASSWORD: "${{ secrets.TESTPYPI_API_TOKEN }}"
      run: |
        echo "Deploying TEST repository"
        ls -al
        echo ${{ github.event.issue.comment.body }}
        echo "dist/$(python3 setup.py --name)-$(python3 setup.py --version).tar.gz"
        ls -al dist/
        python3 -m twine upload --non-interactive -u __token__ "dist/$(python3 setup.py --name)-$(python3 setup.py --version).tar.gz"
